"use strict";
var observables_1 = require("../../src/observables");
var loader_1 = require("../../src/loader");
var reactive_1 = require("../../src/reactive");
var ClockApp = (function () {
    function ClockApp() {
        this.time = new observables_1.Observables.Time();
    }
    ClockApp.getTime = function () {
        return new Date().getTime();
    };
    ClockApp.getSeconds = function (time) {
        var totalSec = Math.floor(time / 1000);
        return totalSec % 60;
    };
    ClockApp.secondsAngle = function (time) {
        var f = 4;
        return 360 * (Math.floor(time / (1000 / f)) % (60 * f)) / (60 * f);
    };
    ClockApp.minutesAngle = function (time) {
        var f = 10;
        return 360 * (Math.floor(time / (60000 / f)) % (60 * f)) / (60 * f);
    };
    ClockApp.hoursAngle = function (time) {
        var f = 12 * 60 * 60 * 1000;
        return 360 * (time % f) / f;
    };
    ClockApp.displayTime = function (time) {
        var totalSec = Math.floor(time / 1000);
        var frac = time % 1000;
        var sec = totalSec % 60;
        var totalMin = Math.floor(totalSec / 60) % 60;
        if (sec < 10)
            sec = "0" + sec;
        if (frac < 10)
            frac = frac + "00";
        if (frac < 100)
            frac = frac + "0";
        return totalMin + ":" + sec + "," + frac;
    };
    return ClockApp;
}());
function init(dom, count) {
    return loader_1.bind(dom).update(new reactive_1.Reactive.Store(new ClockApp(), {}));
}
exports.init = init;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc2FtcGxlL2Nsb2NrL2FwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEscURBQW1EO0FBQ25ELDJDQUF1QztBQUN2QywrQ0FBbUQ7QUFFbkQ7SUFBQTtRQUNXLFNBQUksR0FBRyxJQUFJLHlCQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUE0Q3pDLENBQUM7SUExQ1UsZ0JBQU8sR0FBZDtRQUNJLE1BQU0sQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFTSxtQkFBVSxHQUFqQixVQUFrQixJQUFJO1FBQ2xCLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLE1BQU0sQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxxQkFBWSxHQUFuQixVQUFvQixJQUFJO1FBQ3BCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNWLE1BQU0sQ0FBQyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdkUsQ0FBQztJQUVNLHFCQUFZLEdBQW5CLFVBQW9CLElBQUk7UUFDcEIsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ1gsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRU0sbUJBQVUsR0FBakIsVUFBa0IsSUFBSTtRQUNsQixJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDNUIsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVNLG9CQUFXLEdBQWxCLFVBQW1CLElBQUk7UUFDbkIsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDdkMsSUFBSSxJQUFJLEdBQVEsSUFBSSxHQUFHLElBQUksQ0FBQztRQUM1QixJQUFJLEdBQUcsR0FBUSxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQzdCLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUU5QyxFQUFFLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDO1lBQ1QsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFFcEIsRUFBRSxDQUFDLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztZQUNWLElBQUksR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLEVBQUUsQ0FBQyxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7WUFDWCxJQUFJLEdBQUcsSUFBSSxHQUFHLEdBQUcsQ0FBQztRQUV0QixNQUFNLENBQUMsUUFBUSxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQztJQUM3QyxDQUFDO0lBR0wsZUFBQztBQUFELENBQUMsQUE3Q0QsSUE2Q0M7QUFFRCxjQUFxQixHQUFHLEVBQUUsS0FBYTtJQUNuQyxNQUFNLENBQUMsYUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLG1CQUFFLENBQUMsS0FBSyxDQUFDLElBQUksUUFBUSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUM5RCxDQUFDO0FBRkQsb0JBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlcyB9IGZyb20gXCIuLi8uLi9zcmMvb2JzZXJ2YWJsZXNcIlxyXG5pbXBvcnQgeyBiaW5kIH0gZnJvbSBcIi4uLy4uL3NyYy9sb2FkZXJcIlxyXG5pbXBvcnQgeyBSZWFjdGl2ZSBhcyBSZSB9IGZyb20gJy4uLy4uL3NyYy9yZWFjdGl2ZSdcclxuXHJcbmNsYXNzIENsb2NrQXBwIHtcclxuICAgIHB1YmxpYyB0aW1lID0gbmV3IE9ic2VydmFibGVzLlRpbWUoKTtcclxuXHJcbiAgICBzdGF0aWMgZ2V0VGltZSgpIHtcclxuICAgICAgICByZXR1cm4gbmV3IERhdGUoKS5nZXRUaW1lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldFNlY29uZHModGltZSkge1xyXG4gICAgICAgIHZhciB0b3RhbFNlYyA9IE1hdGguZmxvb3IodGltZSAvIDEwMDApO1xyXG4gICAgICAgIHJldHVybiB0b3RhbFNlYyAlIDYwO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBzZWNvbmRzQW5nbGUodGltZSkge1xyXG4gICAgICAgIHZhciBmID0gNDtcclxuICAgICAgICByZXR1cm4gMzYwICogKE1hdGguZmxvb3IodGltZSAvICgxMDAwIC8gZikpICUgKDYwICogZikpIC8gKDYwICogZik7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIG1pbnV0ZXNBbmdsZSh0aW1lKSB7XHJcbiAgICAgICAgdmFyIGYgPSAxMDtcclxuICAgICAgICByZXR1cm4gMzYwICogKE1hdGguZmxvb3IodGltZSAvICg2MDAwMCAvIGYpKSAlICg2MCAqIGYpKSAvICg2MCAqIGYpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBob3Vyc0FuZ2xlKHRpbWUpIHtcclxuICAgICAgICB2YXIgZiA9IDEyICogNjAgKiA2MCAqIDEwMDA7XHJcbiAgICAgICAgcmV0dXJuIDM2MCAqICh0aW1lICUgZikgLyBmO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBkaXNwbGF5VGltZSh0aW1lKSB7XHJcbiAgICAgICAgdmFyIHRvdGFsU2VjID0gTWF0aC5mbG9vcih0aW1lIC8gMTAwMCk7XHJcbiAgICAgICAgdmFyIGZyYWM6IGFueSA9IHRpbWUgJSAxMDAwO1xyXG4gICAgICAgIHZhciBzZWM6IGFueSA9IHRvdGFsU2VjICUgNjA7XHJcbiAgICAgICAgdmFyIHRvdGFsTWluID0gTWF0aC5mbG9vcih0b3RhbFNlYyAvIDYwKSAlIDYwO1xyXG5cclxuICAgICAgICBpZiAoc2VjIDwgMTApXHJcbiAgICAgICAgICAgIHNlYyA9IFwiMFwiICsgc2VjO1xyXG5cclxuICAgICAgICBpZiAoZnJhYyA8IDEwKVxyXG4gICAgICAgICAgICBmcmFjID0gZnJhYyArIFwiMDBcIjtcclxuICAgICAgICBpZiAoZnJhYyA8IDEwMClcclxuICAgICAgICAgICAgZnJhYyA9IGZyYWMgKyBcIjBcIjtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRvdGFsTWluICsgXCI6XCIgKyBzZWMgKyBcIixcIiArIGZyYWM7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gc3RhdGljIG1hcChmb3JtYXQ6ICh0aW1lOiBhbnkpID0+IHN0cmluZykgeyB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7IH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoZG9tLCBjb3VudDogbnVtYmVyKSB7XHJcbiAgICByZXR1cm4gYmluZChkb20pLnVwZGF0ZShuZXcgUmUuU3RvcmUobmV3IENsb2NrQXBwKCksIHt9KSk7XHJcbn0iXX0=