"use strict";
var observables_1 = require("../../src/observables");
var xania_1 = require("../../src/xania");
require("./app.css");
var ClockApp = (function () {
    function ClockApp() {
        this.time = new observables_1.Observables.Time();
    }
    ClockApp.secondsAngle = function (time) {
        var f = 4;
        return 360 * (Math.floor(time / (1000 / f)) % (60 * f)) / (60 * f);
    };
    ClockApp.minutesAngle = function (time) {
        var f = 60 * 60 * 1000;
        return 360 * (time % f) / f;
    };
    ClockApp.hoursAngle = function (time) {
        var f = 12 * 60 * 60 * 1000;
        return 360 * (time % f) / f;
    };
    ClockApp.prototype.view = function (xania) {
        return (xania.tag("div", { style: "height: 200px;" },
            xania.tag("svg", { viewBox: "0 0 200 200" },
                xania.tag("g", { transform: "scale(2) translate(50,50)" },
                    xania.tag("circle", { className: "clock-face", r: "35" }),
                    xania.tag(xania_1.ForEach, { expr: xania_1.query("for p in [ 0..59 ]") },
                        xania.tag("line", { className: "minor", y1: "42", y2: "45", transform: ["rotate(", xania_1.query("p * 6"), ")"] })),
                    xania.tag(xania_1.ForEach, { expr: xania_1.query("for p in [ 0..11 ]") },
                        xania.tag("line", { className: "major", y1: "35", y2: "45", transform: ["rotate(", xania_1.query("p * 30"), ")"] })),
                    xania.tag("line", { className: "hour", y1: "2", y2: "-20", transform: ["rotate(", xania_1.query("hoursAngle (await time)"), ")"] }),
                    xania.tag("line", { className: "minute", y1: "4", y2: "-30", transform: ["rotate(", xania_1.query("minutesAngle (await time)"), ")"] }),
                    xania.tag("g", { transform: ["rotate(", xania_1.query("secondsAngle (await time)"), ")"] },
                        xania.tag("line", { className: "second", y1: "10", y2: "-38" }),
                        xania.tag("line", { className: "second-counterweight", y1: "10", y2: "2" }))))));
    };
    return ClockApp;
}());
exports.ClockApp = ClockApp;
function execute(_a) {
    var driver = _a.driver;
    return xania_1.Xania.render(ClockApp, driver);
}
exports.execute = execute;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEscURBQW1EO0FBQ25ELHlDQUFzRjtBQUN0RixxQkFBa0I7QUFFbEI7SUFBQTtRQUNJLFNBQUksR0FBRyxJQUFJLHlCQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7SUF3Q2xDLENBQUM7SUF0Q1UscUJBQVksR0FBbkIsVUFBb0IsSUFBSTtRQUNwQixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDVixNQUFNLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFTSxxQkFBWSxHQUFuQixVQUFvQixJQUFJO1FBQ3BCLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLE1BQU0sQ0FBQyxHQUFHLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFTSxtQkFBVSxHQUFqQixVQUFrQixJQUFJO1FBQ2xCLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQztRQUM1QixNQUFNLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsdUJBQUksR0FBSixVQUFLLEtBQUs7UUFDTixNQUFNLENBQUMsQ0FDSCxtQkFBSyxLQUFLLEVBQUMsZ0JBQWdCO1lBQ3ZCLG1CQUFLLE9BQU8sRUFBQyxhQUFhO2dCQUN0QixpQkFBRyxTQUFTLEVBQUMsMkJBQTJCO29CQUNwQyxzQkFBUSxTQUFTLEVBQUMsWUFBWSxFQUFDLENBQUMsRUFBQyxJQUFJLEdBQVU7b0JBQy9DLFVBQUMsZUFBTyxJQUFDLElBQUksRUFBRSxhQUFLLENBQUMsb0JBQW9CLENBQUM7d0JBQ3RDLG9CQUFNLFNBQVMsRUFBQyxPQUFPLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFDLFNBQVMsRUFBRSxDQUFDLFNBQVMsRUFBRSxhQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsR0FBRyxDQUFDLEdBQUksQ0FDakY7b0JBQ1YsVUFBQyxlQUFPLElBQUMsSUFBSSxFQUFFLGFBQUssQ0FBQyxvQkFBb0IsQ0FBQzt3QkFDdEMsb0JBQU0sU0FBUyxFQUFDLE9BQU8sRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUMsU0FBUyxFQUFFLENBQUMsU0FBUyxFQUFFLGFBQUssQ0FBQyxRQUFRLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBSSxDQUNsRjtvQkFDVixvQkFBTSxTQUFTLEVBQUMsTUFBTSxFQUFDLEVBQUUsRUFBQyxHQUFHLEVBQUMsRUFBRSxFQUFDLEtBQUssRUFBQyxTQUFTLEVBQUUsQ0FBQyxTQUFTLEVBQUUsYUFBSyxDQUFDLHlCQUF5QixDQUFDLEVBQUUsR0FBRyxDQUFDLEdBQUk7b0JBQ3hHLG9CQUFNLFNBQVMsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsS0FBSyxFQUFDLFNBQVMsRUFBRSxDQUFDLFNBQVMsRUFBRSxhQUFLLENBQUMsMkJBQTJCLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBSTtvQkFDNUcsaUJBQUcsU0FBUyxFQUFFLENBQUMsU0FBUyxFQUFFLGFBQUssQ0FBQywyQkFBMkIsQ0FBQyxFQUFFLEdBQUcsQ0FBQzt3QkFDOUQsb0JBQU0sU0FBUyxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFDLEVBQUUsRUFBQyxLQUFLLEdBQVE7d0JBQ2pELG9CQUFNLFNBQVMsRUFBQyxzQkFBc0IsRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFDLEVBQUUsRUFBQyxHQUFHLEdBQVEsQ0FDN0QsQ0FDSixDQUNGLENBQ0osQ0FDVCxDQUFDO0lBQ04sQ0FBQztJQUNMLGVBQUM7QUFBRCxDQUFDLEFBekNELElBeUNDO0FBekNZLDRCQUFRO0FBMkNyQixpQkFBd0IsRUFBVTtRQUFSLGtCQUFNO0lBQzVCLE1BQU0sQ0FBQyxhQUFLLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBRkQsMEJBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlcyB9IGZyb20gXCIuLi8uLi9zcmMvb2JzZXJ2YWJsZXNcIlxyXG5pbXBvcnQgeyBYYW5pYSwgRm9yRWFjaCwgVGVtcGxhdGUsIERvbSwgUmVhY3RpdmUgYXMgUmUsIHF1ZXJ5IH0gZnJvbSBcIi4uLy4uL3NyYy94YW5pYVwiXHJcbmltcG9ydCAnLi9hcHAuY3NzJ1xyXG5cclxuZXhwb3J0IGNsYXNzIENsb2NrQXBwIHtcclxuICAgIHRpbWUgPSBuZXcgT2JzZXJ2YWJsZXMuVGltZSgpO1xyXG5cclxuICAgIHN0YXRpYyBzZWNvbmRzQW5nbGUodGltZSkge1xyXG4gICAgICAgIHZhciBmID0gNDtcclxuICAgICAgICByZXR1cm4gMzYwICogKE1hdGguZmxvb3IodGltZSAvICgxMDAwIC8gZikpICUgKDYwICogZikpIC8gKDYwICogZik7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIG1pbnV0ZXNBbmdsZSh0aW1lKSB7XHJcbiAgICAgICAgdmFyIGYgPSA2MCAqIDYwICogMTAwMDtcclxuICAgICAgICByZXR1cm4gMzYwICogKHRpbWUgJSBmKSAvIGY7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGhvdXJzQW5nbGUodGltZSkge1xyXG4gICAgICAgIHZhciBmID0gMTIgKiA2MCAqIDYwICogMTAwMDtcclxuICAgICAgICByZXR1cm4gMzYwICogKHRpbWUgJSBmKSAvIGY7XHJcbiAgICB9XHJcblxyXG4gICAgdmlldyh4YW5pYSkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJoZWlnaHQ6IDIwMHB4O1wiPlxyXG4gICAgICAgICAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDIwMCAyMDBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZyB0cmFuc2Zvcm09XCJzY2FsZSgyKSB0cmFuc2xhdGUoNTAsNTApXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjaXJjbGUgY2xhc3NOYW1lPVwiY2xvY2stZmFjZVwiIHI9XCIzNVwiPjwvY2lyY2xlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8Rm9yRWFjaCBleHByPXtxdWVyeShcImZvciBwIGluIFsgMC4uNTkgXVwiKX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGluZSBjbGFzc05hbWU9XCJtaW5vclwiIHkxPVwiNDJcIiB5Mj1cIjQ1XCIgdHJhbnNmb3JtPXtbXCJyb3RhdGUoXCIsIHF1ZXJ5KFwicCAqIDZcIiksIFwiKVwiXX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Gb3JFYWNoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8Rm9yRWFjaCBleHByPXtxdWVyeShcImZvciBwIGluIFsgMC4uMTEgXVwiKX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGluZSBjbGFzc05hbWU9XCJtYWpvclwiIHkxPVwiMzVcIiB5Mj1cIjQ1XCIgdHJhbnNmb3JtPXtbXCJyb3RhdGUoXCIsIHF1ZXJ5KFwicCAqIDMwXCIpLCBcIilcIl19IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvRm9yRWFjaD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmUgY2xhc3NOYW1lPVwiaG91clwiIHkxPVwiMlwiIHkyPVwiLTIwXCIgdHJhbnNmb3JtPXtbXCJyb3RhdGUoXCIsIHF1ZXJ5KFwiaG91cnNBbmdsZSAoYXdhaXQgdGltZSlcIiksIFwiKVwiXX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmUgY2xhc3NOYW1lPVwibWludXRlXCIgeTE9XCI0XCIgeTI9XCItMzBcIiB0cmFuc2Zvcm09e1tcInJvdGF0ZShcIiwgcXVlcnkoXCJtaW51dGVzQW5nbGUgKGF3YWl0IHRpbWUpXCIpLCBcIilcIl19IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxnIHRyYW5zZm9ybT17W1wicm90YXRlKFwiLCBxdWVyeShcInNlY29uZHNBbmdsZSAoYXdhaXQgdGltZSlcIiksIFwiKVwiXX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGluZSBjbGFzc05hbWU9XCJzZWNvbmRcIiB5MT1cIjEwXCIgeTI9XCItMzhcIj48L2xpbmU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGluZSBjbGFzc05hbWU9XCJzZWNvbmQtY291bnRlcndlaWdodFwiIHkxPVwiMTBcIiB5Mj1cIjJcIj48L2xpbmU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZz5cclxuICAgICAgICAgICAgICAgICAgICA8L2c+XHJcbiAgICAgICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGV4ZWN1dGUoeyBkcml2ZXIgfSkge1xyXG4gICAgcmV0dXJuIFhhbmlhLnJlbmRlcihDbG9ja0FwcCwgZHJpdmVyKTtcclxufVxyXG4iXX0=