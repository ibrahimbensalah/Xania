"use strict";
var observables_1 = require("../../src/observables");
var xania_1 = require("../../src/xania");
var ClockApp = (function () {
    function ClockApp() {
        this.time = new observables_1.Observables.Time();
    }
    ClockApp.secondsAngle = function (time) {
        var f = 4;
        return 360 * (Math.floor(time / (1000 / f)) % (60 * f)) / (60 * f);
    };
    ClockApp.minutesAngle = function (time) {
        var f = 60 * 60 * 1000;
        return 360 * (time % f) / f;
    };
    ClockApp.hoursAngle = function (time) {
        var f = 12 * 60 * 60 * 1000;
        return 360 * (time % f) / f;
    };
    ClockApp.prototype.view = function (xania) {
        return (xania.tag("div", { style: "height: 200px;" },
            xania.tag("svg", { viewBox: "0 0 200 200" },
                xania.tag("g", { transform: "scale(2) translate(50,50)" },
                    xania.tag("circle", { className: "clock-face", r: "35" }),
                    xania.tag(xania_1.ForEach, { expr: xania_1.fs("for p in [ 0..59 ]") },
                        xania.tag("line", { className: "minor", y1: "42", y2: "45", transform: ["rotate(", xania_1.fs("p * 6"), ")"] })),
                    xania.tag(xania_1.ForEach, { expr: xania_1.fs("for p in [ 0..11 ]") },
                        xania.tag("line", { className: "major", y1: "35", y2: "45", transform: ["rotate(", xania_1.fs("p * 30"), ")"] })),
                    xania.tag("line", { className: "hour", y1: "2", y2: "-20", transform: ["rotate(", xania_1.fs("hoursAngle (await time)"), ")"] }),
                    xania.tag("line", { className: "minute", y1: "4", y2: "-30", transform: ["rotate(", xania_1.fs("minutesAngle (await time)"), ")"] }),
                    xania.tag("g", { transform: ["rotate(", xania_1.fs("secondsAngle (await time)"), ")"] },
                        xania.tag("line", { className: "second", y1: "10", y2: "-38" }),
                        xania.tag("line", { className: "second-counterweight", y1: "10", y2: "2" }))))));
    };
    return ClockApp;
}());
exports.ClockApp = ClockApp;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xvY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zYW1wbGUvbGF5b3V0L2Nsb2NrLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEscURBQW1EO0FBQ25ELHlDQUE2QztBQUU3QztJQUFBO1FBQ0ksU0FBSSxHQUFHLElBQUkseUJBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQXdDbEMsQ0FBQztJQXRDVSxxQkFBWSxHQUFuQixVQUFvQixJQUFJO1FBQ3BCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNWLE1BQU0sQ0FBQyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdkUsQ0FBQztJQUVNLHFCQUFZLEdBQW5CLFVBQW9CLElBQUk7UUFDcEIsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDdkIsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVNLG1CQUFVLEdBQWpCLFVBQWtCLElBQUk7UUFDbEIsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQzVCLE1BQU0sQ0FBQyxHQUFHLEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCx1QkFBSSxHQUFKLFVBQUssS0FBSztRQUNOLE1BQU0sQ0FBQyxDQUNILG1CQUFLLEtBQUssRUFBQyxnQkFBZ0I7WUFDdkIsbUJBQUssT0FBTyxFQUFDLGFBQWE7Z0JBQ3RCLGlCQUFHLFNBQVMsRUFBQywyQkFBMkI7b0JBQ3BDLHNCQUFRLFNBQVMsRUFBQyxZQUFZLEVBQUMsQ0FBQyxFQUFDLElBQUksR0FBVTtvQkFDL0MsVUFBQyxlQUFPLElBQUMsSUFBSSxFQUFFLFVBQUUsQ0FBQyxvQkFBb0IsQ0FBQzt3QkFDbkMsb0JBQU0sU0FBUyxFQUFDLE9BQU8sRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUMsU0FBUyxFQUFFLENBQUMsU0FBUyxFQUFFLFVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBSSxDQUM5RTtvQkFDVixVQUFDLGVBQU8sSUFBQyxJQUFJLEVBQUUsVUFBRSxDQUFDLG9CQUFvQixDQUFDO3dCQUNuQyxvQkFBTSxTQUFTLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBQyxTQUFTLEVBQUUsQ0FBQyxTQUFTLEVBQUUsVUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFJLENBQy9FO29CQUNWLG9CQUFNLFNBQVMsRUFBQyxNQUFNLEVBQUMsRUFBRSxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsS0FBSyxFQUFDLFNBQVMsRUFBRSxDQUFDLFNBQVMsRUFBRSxVQUFFLENBQUMseUJBQXlCLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBSTtvQkFDckcsb0JBQU0sU0FBUyxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsR0FBRyxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUMsU0FBUyxFQUFFLENBQUMsU0FBUyxFQUFFLFVBQUUsQ0FBQywyQkFBMkIsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxHQUFJO29CQUN6RyxpQkFBRyxTQUFTLEVBQUUsQ0FBQyxTQUFTLEVBQUUsVUFBRSxDQUFDLDJCQUEyQixDQUFDLEVBQUUsR0FBRyxDQUFDO3dCQUMzRCxvQkFBTSxTQUFTLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUMsRUFBRSxFQUFDLEtBQUssR0FBUTt3QkFDakQsb0JBQU0sU0FBUyxFQUFDLHNCQUFzQixFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUMsRUFBRSxFQUFDLEdBQUcsR0FBUSxDQUM3RCxDQUNKLENBQ0YsQ0FDSixDQUNULENBQUM7SUFDTixDQUFDO0lBQ0wsZUFBQztBQUFELENBQUMsQUF6Q0QsSUF5Q0M7QUF6Q1ksNEJBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlcyB9IGZyb20gXCIuLi8uLi9zcmMvb2JzZXJ2YWJsZXNcIlxyXG5pbXBvcnQgeyBGb3JFYWNoLCBmcyB9IGZyb20gXCIuLi8uLi9zcmMveGFuaWFcIlxyXG5cclxuZXhwb3J0IGNsYXNzIENsb2NrQXBwIHtcclxuICAgIHRpbWUgPSBuZXcgT2JzZXJ2YWJsZXMuVGltZSgpO1xyXG5cclxuICAgIHN0YXRpYyBzZWNvbmRzQW5nbGUodGltZSkge1xyXG4gICAgICAgIHZhciBmID0gNDtcclxuICAgICAgICByZXR1cm4gMzYwICogKE1hdGguZmxvb3IodGltZSAvICgxMDAwIC8gZikpICUgKDYwICogZikpIC8gKDYwICogZik7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIG1pbnV0ZXNBbmdsZSh0aW1lKSB7XHJcbiAgICAgICAgdmFyIGYgPSA2MCAqIDYwICogMTAwMDtcclxuICAgICAgICByZXR1cm4gMzYwICogKHRpbWUgJSBmKSAvIGY7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGhvdXJzQW5nbGUodGltZSkge1xyXG4gICAgICAgIHZhciBmID0gMTIgKiA2MCAqIDYwICogMTAwMDtcclxuICAgICAgICByZXR1cm4gMzYwICogKHRpbWUgJSBmKSAvIGY7XHJcbiAgICB9XHJcblxyXG4gICAgdmlldyh4YW5pYSkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgc3R5bGU9XCJoZWlnaHQ6IDIwMHB4O1wiPlxyXG4gICAgICAgICAgICAgICAgPHN2ZyB2aWV3Qm94PVwiMCAwIDIwMCAyMDBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZyB0cmFuc2Zvcm09XCJzY2FsZSgyKSB0cmFuc2xhdGUoNTAsNTApXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxjaXJjbGUgY2xhc3NOYW1lPVwiY2xvY2stZmFjZVwiIHI9XCIzNVwiPjwvY2lyY2xlPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8Rm9yRWFjaCBleHByPXtmcyhcImZvciBwIGluIFsgMC4uNTkgXVwiKX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGluZSBjbGFzc05hbWU9XCJtaW5vclwiIHkxPVwiNDJcIiB5Mj1cIjQ1XCIgdHJhbnNmb3JtPXtbXCJyb3RhdGUoXCIsIGZzKFwicCAqIDZcIiksIFwiKVwiXX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Gb3JFYWNoPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8Rm9yRWFjaCBleHByPXtmcyhcImZvciBwIGluIFsgMC4uMTEgXVwiKX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGluZSBjbGFzc05hbWU9XCJtYWpvclwiIHkxPVwiMzVcIiB5Mj1cIjQ1XCIgdHJhbnNmb3JtPXtbXCJyb3RhdGUoXCIsIGZzKFwicCAqIDMwXCIpLCBcIilcIl19IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvRm9yRWFjaD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmUgY2xhc3NOYW1lPVwiaG91clwiIHkxPVwiMlwiIHkyPVwiLTIwXCIgdHJhbnNmb3JtPXtbXCJyb3RhdGUoXCIsIGZzKFwiaG91cnNBbmdsZSAoYXdhaXQgdGltZSlcIiksIFwiKVwiXX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpbmUgY2xhc3NOYW1lPVwibWludXRlXCIgeTE9XCI0XCIgeTI9XCItMzBcIiB0cmFuc2Zvcm09e1tcInJvdGF0ZShcIiwgZnMoXCJtaW51dGVzQW5nbGUgKGF3YWl0IHRpbWUpXCIpLCBcIilcIl19IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxnIHRyYW5zZm9ybT17W1wicm90YXRlKFwiLCBmcyhcInNlY29uZHNBbmdsZSAoYXdhaXQgdGltZSlcIiksIFwiKVwiXX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGluZSBjbGFzc05hbWU9XCJzZWNvbmRcIiB5MT1cIjEwXCIgeTI9XCItMzhcIj48L2xpbmU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGluZSBjbGFzc05hbWU9XCJzZWNvbmQtY291bnRlcndlaWdodFwiIHkxPVwiMTBcIiB5Mj1cIjJcIj48L2xpbmU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZz5cclxuICAgICAgICAgICAgICAgICAgICA8L2c+XHJcbiAgICAgICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufVxyXG5cclxuIl19